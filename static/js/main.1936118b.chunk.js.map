{"version":3,"sources":["utils.js","components/Row.js","components/Cell.js","components/Modal.js","components/Board.js","App.js","index.js"],"names":["randomNum","min","max","Math","floor","random","StyledRow","styled","div","Row","children","StyledCell","props","isRevealed","isMine","gameState","Cell","data","changeStatus","onClick","value","revealed","StyledModalContainer","StyledInnerContainer","StyledClose","span","Modal","setShowModal","BoardContainer","Board","newBoard","useRef","reveleadCellsCount","useState","grid","setGrid","setGameStatus","showModal","useEffect","current","numOfRows","numOfCol","bombs","board","mineLocation","bombsCount","x","subCol","y","push","flagged","currRow","currCol","createBoard","map","singleRow","rowIndex","singleCell","columnIndex","updatedGrid","a","length","App","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1936118b.chunk.js","sourcesContent":["/* \n Description -> Function to be used to create a fresh board.\n Function name -> createBoard\n Arguments -> numOfRows, numOfCol, bombsCount\n Return -> Object of array of board and minelocation\n*/\nexport function createBoard(numOfRows, numOfCol, bombs) {\n    const board = [];\n    const mineLocation = [];\n    let bombsCount = 0;\n\n    for (let x = 0; x < numOfRows; x++) {\n        let subCol = [];\n        for (let y = 0; y < numOfCol; y++) {\n            subCol.push({\n                value: 0,\n                revealed: false,\n                x: x,\n                y: y,\n                flagged: false,\n            });\n        }\n        board.push(subCol);\n    }\n\n    while (bombsCount < bombs) {\n        let x = randomNum(0, numOfRows - 1);\n        let y = randomNum(0, numOfCol - 1);\n\n        if (board[x][y].value === 0) {\n            board[x][y].value = \"X\";\n            mineLocation.push([x, y]);\n            bombsCount++;\n        }\n    }\n\n    for (var currRow = 0; currRow < numOfRows; currRow++) {\n        for (var currCol = 0; currCol < numOfCol; currCol++) {\n            if (board[currRow][currCol].value === \"X\") {\n                continue;\n            }\n\n            if (currRow > 0 && currCol > 0 && board[currRow - 1][currCol - 1].value === \"X\") {\n                board[currRow][currCol].value++;\n            }\n\n            if (currCol > 0 && board[currRow][currCol - 1].value === \"X\") {\n                board[currRow][currCol].value++;\n            }\n\n            if (currRow < numOfRows - 1 && currCol > 0 && board[currRow + 1][currCol - 1].value === \"X\") {\n                board[currRow][currCol].value++;\n            }\n\n            if (currRow < numOfRows - 1 && board[currRow + 1][currCol].value === \"X\") {\n                board[currRow][currCol].value++;\n            }\n\n            if (currRow < numOfRows - 1 && currCol < numOfCol - 1 && board[currRow + 1][currCol + 1].value === \"X\") {\n                board[currRow][currCol].value++;\n            }\n\n            if (currCol < numOfCol - 1 && board[currRow][currCol + 1].value === \"X\") {\n                board[currRow][currCol].value++;\n            }\n\n            if (currRow > 0 && currCol < numOfCol - 1 && board[currRow - 1][currCol + 1].value === \"X\") {\n                board[currRow][currCol].value++;\n            }\n\n            if (currRow > 0 && board[currRow - 1][currCol].value === \"X\") {\n                board[currRow][currCol].value++;\n            }\n        }\n    }\n    return { board, mineLocation };\n}\n\n\n/* \n Description -> Function to get random cell of table\n Function name -> randomNum\n Arguments -> min, max\n Return -> random index return\n*/\nfunction randomNum(min = 0, max) {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledRow = styled.div`\n    display: flex\n`;\n\nconst Row = ({ children }) => {\n    return (\n        <StyledRow>\n            {children}\n        </StyledRow>\n    )\n}\n\nexport default Row;","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledCell = styled.div`\n    width: 100px;\n    height: 100px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    cursor: pointer;\n    background: ${props => props.isRevealed ? props.isMine ? \"#ff8080\" : \"#00bfff;\" : \"#8000ff;\"};\n    border: 1px solid white;\n    color: white;\n    pointer-events: ${props => props.gameState !== 0 ? \"none;\" : \"auto\"};\n    &:hover {\n        box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2);\n    }\n`;\n\nconst Cell = ({ data, changeStatus, gameState }) => {\n    return <StyledCell onClick={changeStatus} isMine={data.value === 'X'} gameState={gameState} isRevealed={data.revealed}>\n        {data.revealed && data.value}\n    </StyledCell>\n}\n\nexport default Cell;","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledModalContainer = styled.div`\n    position: fixed;\n    z-index: 1;\n    padding-top: 100px; \n    left: 0;\n    top: 0;\n    width: 100%; \n    height: 100%;\n    overflow: auto; \n    background-color: rgb(0,0,0); \n    background-color: rgba(0,0,0,0.4); \n`;\n\nconst StyledInnerContainer = styled.div`\n    background-color: #fefefe;\n    margin: auto;\n    padding: 20px;\n    border: 1px solid #888;\n    width: 30%;\n`;\n\nconst StyledClose = styled.span`\n    color: #aaaaaa;\n    float: right;\n    font-size: 28px;\n    font-weight: bold;\n    &:hover {\n        color: #000;\n        text-decoration: none;\n        cursor: pointer;\n    }\n`;\n\nconst Modal = ({ setShowModal, gameState }) => {\n    return (\n        <StyledModalContainer>\n            <StyledInnerContainer>\n                <StyledClose onClick={() => setShowModal(false)}>&times;</StyledClose>\n                <h1>{gameState === 1 ? 'Congratulations' : 'Sorry'}</h1>\n                <p>You {gameState === 1 ? 'won' : 'lost'} the game, on closing the pop up new game will start!</p>\n            </StyledInnerContainer>\n        </StyledModalContainer>)\n}\n\nexport default Modal;","import React, { useState, useEffect, useRef } from \"react\";\nimport styled from 'styled-components';\n\n//utility\nimport { createBoard } from '../utils';\n\n//components\nimport Row from './Row';\nimport Cell from './Cell';\nimport Modal from './Modal';\n\nconst BoardContainer = styled.div`\n    border: 15px solid white;\n    border-radius: 10px;\n    padding: 50px;\n    display: inline-block;\n`;\n\nconst Board = () => {\n    const newBoard = useRef(null);\n    const reveleadCellsCount = useRef(0)\n    //state starts \n    const [grid, setGrid] = useState([]);\n    const [gameState, setGameStatus] = useState(0);\n    const [showModal, setShowModal] = useState(false);\n    //state ends\n\n    //lifecycle method starts\n\n    useEffect(() => {\n        if (gameState != 0) {\n            setShowModal(true);\n        }\n    }, [gameState]);\n\n    useEffect(() => {\n        if (!showModal) {\n            getNewBoard();\n        }\n    }, [showModal])\n\n    //lifecycle method ends\n\n    //utility function starts \n\n    function getNewBoard() {\n        newBoard.current = createBoard(5, 5, 10);\n        reveleadCellsCount.current = 0;\n        setGrid(newBoard.current.board);\n        setGameStatus(0);\n    }\n\n    function changeStatus(x, y) {\n        if (grid[x][y].revealed) {\n            return;\n        }\n        const updatedGrid = [...grid];\n        if (grid[x][y].value === 'X') {\n            setGameStatus(-1);\n            for (var a = 0; a < newBoard.current.mineLocation.length; a++) {\n                updatedGrid[newBoard.current.mineLocation[a][0]][newBoard.current.mineLocation[a][1]].revealed = true;\n            }\n        } else {\n            reveleadCellsCount.current++;\n        }\n        if (reveleadCellsCount.current === (5 * 5) - 1) {\n            setGameStatus(1);\n        }\n        updatedGrid[x][y].revealed = true;\n        setGrid(updatedGrid);\n    }\n\n    //utility function ends\n\n    return (\n        <BoardContainer>\n            {grid.map((singleRow, rowIndex) => <Row key={`row${rowIndex}`}>\n                {singleRow.map((singleCell, columnIndex) => <Cell data={singleCell} key={`cell${columnIndex}`} gameState={gameState} changeStatus={() => changeStatus(rowIndex, columnIndex)} />)}\n            </Row>)}\n            {showModal && <Modal gameState={gameState} setShowModal={setShowModal} />}\n        </BoardContainer>)\n}\n\nexport default Board;","import React from 'react';\n\n//components\nimport Board from './components/Board';\n\n//css\nimport './App.css';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Minesweeper</h1>\n      <Board />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}